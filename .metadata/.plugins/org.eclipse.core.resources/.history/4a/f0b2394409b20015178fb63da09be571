package org.usfirst.frc.team3075.robot;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import libPurple.CANTalon3075;
import libPurple.DriveSystem3075;
import libPurple.EncoderTalon3075;
import libPurple.Victor3075;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class Components {
	 
	public static Victor3075 rearLeft;
	public static Victor3075 frontLeft;
	public static Victor3075 rearRight;
	public static Victor3075 frontRight;
	public static RobotDrive robotDrive;
	public static DriveSystem3075 driveSystem;
	
	public static Joystick driveStick;
	
	public static CANTalon3075 leftWheel;
	public static CANTalon3075 rightWheel;
	
	public static EncoderTalon3075 driveLeftEncoder; //Red izo
	public static EncoderTalon3075 driveRightEncoder; //Blue izo
	
	public static void init() {
		
		rearLeft = new Victor3075(1);
		frontLeft = new Victor3075(2);
		rearRight = new Victor3075(3);
		frontRight = new Victor3075(0);
		
		
		robotDrive = new RobotDrive(frontLeft, rearLeft, frontRight, rearRight);
		driveStick = new Joystick(0);
		
		leftWheel = new CANTalon3075(0);
	    rightWheel = new CANTalon3075(2, true);
		
		driveLeftEncoder = new EncoderTalon3075(leftWheel);
		driveLeftEncoder.setDistancePerPulse(Constants.driveDistancePerPulseLeft);
		driveRightEncoder = new EncoderTalon3075(rightWheel, true);
		driveRightEncoder.setDistancePerPulse(Constants.driveDistancePerPulseRight);
		
		driveSystem = new DriveSystem3075(rearLeft, frontLeft, driveLeftEncoder, rearRight, frontRight, driveRightEncoder);
		driveSystem.setPID(5, 0, 0);
		driveSystem.enablePID();

	}
}

  

