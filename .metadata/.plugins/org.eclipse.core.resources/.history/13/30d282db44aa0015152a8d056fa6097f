package libPurple;

import edu.wpi.first.wpilibj.communication.FRCNetworkCommunicationsLibrary.tResourceType;
import edu.wpi.first.wpilibj.communication.UsageReporting;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
/**
 *  						*** 3075 ***
 * This class is an improvment to the regular speed controller including:
 * * Slave
 * * MotorBound
 * * Invert
 */
public class SpeedController3075 extends SafePWM implements SpeedController{

	boolean inverted = false; //This boolean is true when the motor is inverted.
	
	private SpeedController3075 slave; //This is the slave of the speed controller.
	
	/*
	 * This constructor does not do anything.
	 */
	public SpeedController3075(int channel) {
		super(channel);
		// TODO Auto-generated constructor stub
	}
	
	/*
	 * Sets the slave of the speed controller.
	 */
	public void setSlave(SpeedController3075 slave)
	{
		this.slave = slave;
	}
	
	/**
     * Set the PWM value.
     *
     * The PWM value is set using a range of -1.0 to 1.0, appropriately
     * scaling the value for the FPGA.
     *
     * @param speed The speed value between -1.0 and 1.0 to set.
     */
	public void set(double value)
	{
		setSpeed(inverted?-value:value);
		
		if (slave != null)
			slave.set(inverted?-value:value);
	}

	@Override
	public void pidWrite(double output) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public double get() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void disable() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void set(double speed, byte syncGroup) {
		// TODO Auto-generated method stub
		
	}
	
}
