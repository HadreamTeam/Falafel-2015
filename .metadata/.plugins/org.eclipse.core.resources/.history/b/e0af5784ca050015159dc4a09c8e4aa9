package org.usfirst.frc.team3075.robot.commands;

import org.usfirst.frc.team3075.robot.Robot;
import org.usfirst.frc.team3075.robot.RobotMap;

import edu.wpi.first.wpilibj.command.Command;

public class Drive extends Command {
	double distance = 0;
	double kp = 1;
	public Drive(double distance) {
        // Use requires() here to declare subsystem dependencies
		this.distance = distance;
        requires(Robot.DriveSystem);
    }
	public void setKp(double Kp)
	{
		this.kp = Kp;
	}

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.DriveSystem.driveArcade((distance-RobotMap.e0.getDistance() +
        		RobotMap.e1.getDistance())/2*kp,0);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return (RobotMap.e0.getDistance() +
        		RobotMap.e1.getDistance())/2 >= distance;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
