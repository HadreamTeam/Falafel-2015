package org.usfirst.frc.team3075.robot.commands;

import org.usfirst.frc.team3075.robot.Components;
import org.usfirst.frc.team3075.robot.Robot;

import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class PrepareTrajectory extends Command {

	private double x;
	private double speed = 0;
	
    public PrepareTrajectory() {
        // Use requires() here to declare subsystem dependencies
        requires(Robot.shooter);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	
		Robot.shooter.enablePID();

    	
    	try {
			x = Robot.imageDetection.getRectangle().getHeight();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			x = -1;
		}
    	
    	if(x > 20)
    	{
    		Components.shooterAnglePiston.set(Value.kReverse);
        	speed = 0.005*Math.pow(x, 3) - 0.28*Math.pow(x, 2) + 4.438*x - 8.33;
    	}
    	else
    	{
    		Components.shooterAnglePiston.set(Value.kForward);
    		speed = 0.006*Math.pow(x, 5) - 0.486*Math.pow(x, 4) + 14.4*Math.pow(x, 3) - 211.7*Math.pow(x, 2) + 1546*x - 4472;
    	}
    	
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.shooter.setSpeed(speed);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
